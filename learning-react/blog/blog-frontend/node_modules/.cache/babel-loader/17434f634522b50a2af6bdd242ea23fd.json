{"ast":null,"code":"var _jsxFileName = \"C:\\\\Temp\\\\ReactClass\\\\learning-react\\\\blog\\\\blog-frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from './modules';\nimport { tempSetUser, check } from './modules/user';\nimport { HelmetProvider } from 'react-helmet-async';\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nfunction loadUser() {\n  try {\n    const user = localStorage.getItem('user');\n    if (!user) return; // 로그인 상태가 아니라면 아무것도 안함\n\n    store.dispatch(tempSetUser(user));\n    store.dispatch(check());\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\n\nsagaMiddleware.run(rootSaga);\nloadUser();\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(HelmetProvider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n})))), document.getElementById('root'));\nserviceWorker.unregister();\nserviceWorker.unregister();","map":{"version":3,"sources":["C:\\Temp\\ReactClass\\learning-react\\blog\\blog-frontend\\src\\index.js"],"names":["React","ReactDOM","App","serviceWorker","BrowserRouter","Provider","createStore","applyMiddleware","composeWithDevTools","createSagaMiddleware","rootReducer","rootSaga","tempSetUser","check","HelmetProvider","sagaMiddleware","store","loadUser","user","localStorage","getItem","dispatch","e","console","log","run","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,IAAsBC,QAAtB,QAAsC,WAAtC;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,gBAAnC;AACA,SAASC,cAAT,QAA+B,oBAA/B;AAEA,MAAMC,cAAc,GAAGN,oBAAoB,EAA3C;AACA,MAAMO,KAAK,GAAGV,WAAW,CACvBI,WADuB,EAEvBF,mBAAmB,CAACD,eAAe,CAACQ,cAAD,CAAhB,CAFI,CAAzB;;AAKA,SAASE,QAAT,GAAoB;AAClB,MAAI;AACF,UAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACA,QAAI,CAACF,IAAL,EAAW,OAFT,CAEiB;;AAEnBF,IAAAA,KAAK,CAACK,QAAN,CAAeT,WAAW,CAACM,IAAD,CAA1B;AACAF,IAAAA,KAAK,CAACK,QAAN,CAAeR,KAAK,EAApB;AACD,GAND,CAME,OAAOS,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF;;AAEDT,cAAc,CAACU,GAAf,CAAmBd,QAAnB;AACAM,QAAQ;AAERhB,QAAQ,CAACyB,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,EAQEW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF;AAWAzB,aAAa,CAAC0B,UAAd;AAEA1B,aAAa,CAAC0B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from './modules';\nimport { tempSetUser, check } from './modules/user';\nimport { HelmetProvider } from 'react-helmet-async';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nfunction loadUser() {\n  try {\n    const user = localStorage.getItem('user');\n    if (!user) return; // 로그인 상태가 아니라면 아무것도 안함\n\n    store.dispatch(tempSetUser(user));\n    store.dispatch(check());\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\n\nsagaMiddleware.run(rootSaga);\nloadUser();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <HelmetProvider>\n        <App />\n      </HelmetProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}