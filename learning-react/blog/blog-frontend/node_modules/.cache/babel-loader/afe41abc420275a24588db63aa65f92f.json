{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Temp\\\\ReactClass\\\\learning-react\\\\blog\\\\blog-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Temp\\\\ReactClass\\\\learning-react\\\\blog\\\\blog-frontend\\\\src\\\\components\\\\posts\\\\PostList.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  padding-top: 3rem;\\n  padding-bottom: 3rem;\\n  /* \\uB9E8 \\uC704 \\uD3EC\\uC2A4\\uD2B8\\uB294 padding-top \\uC5C6\\uC74C */\\n  &:first-child {\\n    padding-top: 0;\\n  }\\n  & + & {\\n    border-top: 1px solid \", \";\\n  }\\n\\n  h2 {\\n    font-size: 2rem;\\n    margin-bottom: 0;\\n    margin-top: 0;\\n    &:hover {\\n      color: \", \";\\n    }\\n  }\\n  p {\\n    margin-top: 2rem;\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: flex-end;\\n  margin-bottom: 3rem;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  margin-top: 3rem;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport Button from '../common/Button';\nimport palette from '../../lib/styles/palette';\nimport SubInfo from '../common/SubInfo';\nimport Tags from '../common/Tags';\nimport { Link } from 'react-router-dom';\nconst PostListBlock = styled(Responsive)(_templateObject());\nconst WritePostButtonWrapper = styled.div(_templateObject2());\nconst PostItemBlock = styled.div(_templateObject3(), palette.gray[2], palette.gray[6]);\n\nconst PostItem = ({\n  post\n}) => {\n  const publishedDate = post.publishedDate,\n        user = post.user,\n        tags = post.tags,\n        title = post.title,\n        body = post.body,\n        _id = post._id;\n  return React.createElement(PostItemBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/@\".concat(user.username, \"/\").concat(_id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, title)), React.createElement(SubInfo, {\n    username: user.username,\n    publishedDate: new Date(publishedDate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Tags, {\n    tags: tags,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, body));\n};\n\nconst PostList = ({\n  posts,\n  loading,\n  error,\n  showWriteButton\n}) => {\n  // 에러 발생 시\n  if (error) {\n    return React.createElement(PostListBlock, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\");\n  }\n\n  return React.createElement(PostListBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(WritePostButtonWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, showWriteButton && React.createElement(Button, {\n    cyan: true,\n    to: \"/write\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\uC0C8 \\uAE00 \\uC791\\uC131\\uD558\\uAE30\")), !loading && posts && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, posts.map(post => React.createElement(PostItem, {\n    post: post,\n    key: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))));\n};\n\nexport default PostList;","map":{"version":3,"sources":["C:\\Temp\\ReactClass\\learning-react\\blog\\blog-frontend\\src\\components\\posts\\PostList.js"],"names":["React","styled","Responsive","Button","palette","SubInfo","Tags","Link","PostListBlock","WritePostButtonWrapper","div","PostItemBlock","gray","PostItem","post","publishedDate","user","tags","title","body","_id","username","Date","PostList","posts","loading","error","showWriteButton","map"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,aAAa,GAAGP,MAAM,CAACC,UAAD,CAAT,mBAAnB;AAIA,MAAMO,sBAAsB,GAAGR,MAAM,CAACS,GAAV,oBAA5B;AAMA,MAAMC,aAAa,GAAGV,MAAM,CAACS,GAAV,qBAQSN,OAAO,CAACQ,IAAR,CAAa,CAAb,CART,EAgBJR,OAAO,CAACQ,IAAR,CAAa,CAAb,CAhBI,CAAnB;;AAwBA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA,QACrBC,aADqB,GAC2BD,IAD3B,CACrBC,aADqB;AAAA,QACNC,IADM,GAC2BF,IAD3B,CACNE,IADM;AAAA,QACAC,IADA,GAC2BH,IAD3B,CACAG,IADA;AAAA,QACMC,KADN,GAC2BJ,IAD3B,CACMI,KADN;AAAA,QACaC,IADb,GAC2BL,IAD3B,CACaK,IADb;AAAA,QACmBC,GADnB,GAC2BN,IAD3B,CACmBM,GADnB;AAE7B,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,cAAOJ,IAAI,CAACK,QAAZ,cAAwBD,GAAxB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCF,KAAxC,CADF,CADF,EAIE,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAEF,IAAI,CAACK,QADjB;AAEE,IAAA,aAAa,EAAE,IAAIC,IAAJ,CAASP,aAAT,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAQE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,IAAJ,CATF,CADF;AAaD,CAfD;;AAiBA,MAAMI,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA;AAAzB,CAAD,KAAgD;AAC/D;AACA,MAAID,KAAJ,EAAW;AACT,WAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAAP;AACD;;AAED,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,eAAe,IACd,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAa,IAAA,EAAE,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFJ,CADF,EASG,CAACF,OAAD,IAAYD,KAAZ,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACI,GAAN,CAAUd,IAAI,IACb,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,GAAG,EAAEA,IAAI,CAACM,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAVJ,CADF;AAmBD,CAzBD;;AA2BA,eAAeG,QAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport Button from '../common/Button';\nimport palette from '../../lib/styles/palette';\nimport SubInfo from '../common/SubInfo';\nimport Tags from '../common/Tags';\nimport { Link } from 'react-router-dom';\n\nconst PostListBlock = styled(Responsive)`\n  margin-top: 3rem;\n`;\n\nconst WritePostButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 3rem;\n`;\n\nconst PostItemBlock = styled.div`\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n  /* 맨 위 포스트는 padding-top 없음 */\n  &:first-child {\n    padding-top: 0;\n  }\n  & + & {\n    border-top: 1px solid ${palette.gray[2]};\n  }\n\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 0;\n    margin-top: 0;\n    &:hover {\n      color: ${palette.gray[6]};\n    }\n  }\n  p {\n    margin-top: 2rem;\n  }\n`;\n\nconst PostItem = ({ post }) => {\n  const { publishedDate, user, tags, title, body, _id } = post;\n  return (\n    <PostItemBlock>\n      <h2>\n        <Link to={`/@${user.username}/${_id}`}>{title}</Link>\n      </h2>\n      <SubInfo\n        username={user.username}\n        publishedDate={new Date(publishedDate)}\n      />\n      <Tags tags={tags} />\n      <p>{body}</p>\n    </PostItemBlock>\n  );\n};\n\nconst PostList = ({ posts, loading, error, showWriteButton }) => {\n  // 에러 발생 시\n  if (error) {\n    return <PostListBlock>에러가 발생했습니다.</PostListBlock>;\n  }\n\n  return (\n    <PostListBlock>\n      <WritePostButtonWrapper>\n        {showWriteButton && (\n          <Button cyan to=\"/write\">\n            새 글 작성하기\n          </Button>\n        )}\n      </WritePostButtonWrapper>\n      {/*  로딩 중 아니고, 포스트 배열이 존재할 때만 보여줌 */}\n      {!loading && posts && (\n        <div>\n          {posts.map(post => (\n            <PostItem post={post} key={post._id} />\n          ))}\n        </div>\n      )}\n    </PostListBlock>\n  );\n};\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}