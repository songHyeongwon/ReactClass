{"ast":null,"code":"var _jsxFileName = \"C:\\\\Temp\\\\ReactClass\\\\learning-react\\\\blog\\\\blog-frontend\\\\src\\\\containers\\\\posts\\\\PostListContainer.js\";\nimport React, { useEffect } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostList from '../../components/posts/PostList';\nimport { listPosts } from '../../modules/posts';\n\nconst PostListContainer = ({\n  location,\n  match\n}) => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    posts,\n    loading,\n    user\n  }) => ({\n    posts: posts.posts,\n    error: posts.error,\n    loading: loading['posts/LIST_POSTS'],\n    user: user.user\n  })),\n        posts = _useSelector.posts,\n        error = _useSelector.error,\n        loading = _useSelector.loading,\n        user = _useSelector.user;\n\n  useEffect(() => {\n    const username = match.params.username;\n\n    const _qs$parse = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    }),\n          tag = _qs$parse.tag,\n          page = _qs$parse.page;\n\n    dispatch(listPosts({\n      tag,\n      username,\n      page\n    }));\n  }, [dispatch, location.search, match.params]);\n  return React.createElement(PostList, {\n    loading: loading,\n    error: error,\n    posts: posts,\n    showWriteButton: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(PostListContainer);","map":{"version":3,"sources":["C:\\Temp\\ReactClass\\learning-react\\blog\\blog-frontend\\src\\containers\\posts\\PostListContainer.js"],"names":["React","useEffect","qs","withRouter","useDispatch","useSelector","PostList","listPosts","PostListContainer","location","match","dispatch","posts","loading","user","error","username","params","parse","search","ignoreQueryPrefix","tag","page"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AACjD,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AADiD,uBAETC,WAAW,CACjD,CAAC;AAAEO,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAD,MAA+B;AAC7BF,IAAAA,KAAK,EAAEA,KAAK,CAACA,KADgB;AAE7BG,IAAAA,KAAK,EAAEH,KAAK,CAACG,KAFgB;AAG7BF,IAAAA,OAAO,EAAEA,OAAO,CAAC,kBAAD,CAHa;AAI7BC,IAAAA,IAAI,EAAEA,IAAI,CAACA;AAJkB,GAA/B,CADiD,CAFF;AAAA,QAEzCF,KAFyC,gBAEzCA,KAFyC;AAAA,QAElCG,KAFkC,gBAElCA,KAFkC;AAAA,QAE3BF,OAF2B,gBAE3BA,OAF2B;AAAA,QAElBC,IAFkB,gBAElBA,IAFkB;;AAUjDb,EAAAA,SAAS,CAAC,MAAM;AAAA,UACNe,QADM,GACON,KAAK,CAACO,MADb,CACND,QADM;;AAAA,sBAEQd,EAAE,CAACgB,KAAH,CAAST,QAAQ,CAACU,MAAlB,EAA0B;AAC9CC,MAAAA,iBAAiB,EAAE;AAD2B,KAA1B,CAFR;AAAA,UAENC,GAFM,aAENA,GAFM;AAAA,UAEDC,IAFC,aAEDA,IAFC;;AAKdX,IAAAA,QAAQ,CAACJ,SAAS,CAAC;AAAEc,MAAAA,GAAF;AAAOL,MAAAA,QAAP;AAAiBM,MAAAA;AAAjB,KAAD,CAAV,CAAR;AACD,GANQ,EAMN,CAACX,QAAD,EAAWF,QAAQ,CAACU,MAApB,EAA4BT,KAAK,CAACO,MAAlC,CANM,CAAT;AAQA,SACE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAEJ,OADX;AAEE,IAAA,KAAK,EAAEE,KAFT;AAGE,IAAA,KAAK,EAAEH,KAHT;AAIE,IAAA,eAAe,EAAEE,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CA1BD;;AA4BA,eAAeX,UAAU,CAACK,iBAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostList from '../../components/posts/PostList';\nimport { listPosts } from '../../modules/posts';\n\nconst PostListContainer = ({ location, match }) => {\n  const dispatch = useDispatch();\n  const { posts, error, loading, user } = useSelector(\n    ({ posts, loading, user }) => ({\n      posts: posts.posts,\n      error: posts.error,\n      loading: loading['posts/LIST_POSTS'],\n      user: user.user,\n    }),\n  );\n  useEffect(() => {\n    const { username } = match.params;\n    const { tag, page } = qs.parse(location.search, {\n      ignoreQueryPrefix: true,\n    });\n    dispatch(listPosts({ tag, username, page }));\n  }, [dispatch, location.search, match.params]);\n\n  return (\n    <PostList\n      loading={loading}\n      error={error}\n      posts={posts}\n      showWriteButton={user}\n    />\n  );\n};\n\nexport default withRouter(PostListContainer);\n"]},"metadata":{},"sourceType":"module"}