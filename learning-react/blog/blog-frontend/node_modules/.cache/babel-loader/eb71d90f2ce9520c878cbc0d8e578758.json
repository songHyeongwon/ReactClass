{"ast":null,"code":"import _slicedToArray from \"C:\\\\Temp\\\\ReactClass\\\\learning-react\\\\blog\\\\blog-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Temp\\\\ReactClass\\\\learning-react\\\\blog\\\\blog-frontend\\\\src\\\\containers\\\\auth\\\\LoginForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\n\nconst LoginForm = ({\n  history\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    auth,\n    user\n  }) => ({\n    form: auth.login,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user\n  })),\n        form = _useSelector.form,\n        auth = _useSelector.auth,\n        authError = _useSelector.authError,\n        user = _useSelector.user; // 인풋 변경 이벤트 핸들러\n\n\n  const onChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    dispatch(changeField({\n      form: 'login',\n      key: name,\n      value\n    }));\n  }; // 폼 등록 이벤트 핸들러\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const username = form.username,\n          password = form.password;\n    dispatch(login({\n      username,\n      password\n    }));\n  }; // 컴포넌트가 처음 렌더링 될 때 form 을 초기화함\n\n\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      setError('로그인 실패');\n      return;\n    }\n\n    if (auth) {\n      console.log('로그인 성공');\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localStorage is not working');\n      }\n    }\n  }, [history, user]);\n  return React.createElement(AuthForm, {\n    type: \"login\",\n    form: form,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["C:\\Temp\\ReactClass\\learning-react\\blog\\blog-frontend\\src\\containers\\auth\\LoginForm.js"],"names":["React","useEffect","useState","useSelector","useDispatch","withRouter","changeField","initializeForm","login","AuthForm","check","LoginForm","history","error","setError","dispatch","auth","user","form","authError","onChange","e","target","value","name","key","onSubmit","preventDefault","username","password","console","log","push","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\n\nconst LoginForm = ({ history }) => {\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n    form: auth.login,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user,\n  }));\n  // 인풋 변경 이벤트 핸들러\n  const onChange = e => {\n    const { value, name } = e.target;\n    dispatch(\n      changeField({\n        form: 'login',\n        key: name,\n        value,\n      }),\n    );\n  };\n\n  // 폼 등록 이벤트 핸들러\n  const onSubmit = e => {\n    e.preventDefault();\n    const { username, password } = form;\n    dispatch(login({ username, password }));\n  };\n\n  // 컴포넌트가 처음 렌더링 될 때 form 을 초기화함\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      setError('로그인 실패');\n      return;\n    }\n    if (auth) {\n      console.log('로그인 성공');\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localStorage is not working');\n      }\n    }\n  }, [history, user]);\n\n  return (\n    <AuthForm\n      type=\"login\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      error={error}\n    />\n  );\n};\n\nexport default withRouter(LoginForm);\n"]},"metadata":{},"sourceType":"module"}